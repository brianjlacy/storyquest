
<!--
    %NAME:Example Dropin
    %DESCRIPTION:An example dropin to start with.

    Dropin files must match the dropin name (name.dropin) and must be located
    in the resources folder.
    It is encouraged to use id and class names that are guaranteed to be local to
    the dropin. All script and css tags are global, access to model as usual.

    For the editor: the string after %DESCRIPTION anywhere in the dropin text
    is used as the description text for the file browser. Same with %NAME.

    CAUTION: USE ONLY LETTERS, INTEGERS, BANGS, SPACES IN PARAMETERS!
-->

<h1 id="_dropin_demo_id"></h1>
<h2 id="_dropin_demo_headline"></h2>
<h2 id="_dropin_demo_body"></h2>

<!-- ONLY ONE SCRIPT TAG ALLOWED -->
<script>
    // _dropinBody.<typename of dropin> has the body content of the LAST dropin of this type added to the text.
    // _dropinBody.<id of dropin> has the body content of the CURRENT dropin of this type added to the text.
    // _dropinParams.<typename of dropin> has an array containing the params (minus the dropin type name) of the LAST dropin.
    // _dropinParams.<id of dropin> has an array containing the params (minus the dropin type name) of the CURRENT dropin.
    // dropinId has the particular id of this dropin instance.
    //                -> use $("#" + dropinId) to refer to the enclosing dropin element of THIS dropin.

    console.log("DROPIN ID: " + dropinId);
    console.log("DROPIN BODY: " + _dropinBody[dropinId]);
    console.log("DROPIN PARAMS: " + _dropinParams[dropinId].join(", "));

    $("#_dropin_demo_id").html("This dropin has the id: " + dropinId);
    $("#_dropin_demo_headline").html("And the parameters " + _dropinParams[dropinId].join(", "));
    $("#_dropin_demo_body").html("And the body: " + _dropinBody[dropinId]);
</script>
